"""Add missing fields to MOP, User, and MOPFile models

Revision ID: 4f57ab7f58b3
Revises: 7c3882cb5571
Create Date: 2025-08-12 18:53:49.195181

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4f57ab7f58b3'
down_revision = '7c3882cb5571'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add columns to mop_files with default values for existing records
    with op.batch_alter_table('mop_files', schema=None) as batch_op:
        batch_op.add_column(sa.Column('filename', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('file_size', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('uploaded_by', sa.Integer(), nullable=True))
    
    # Update existing records with default values
    op.execute("UPDATE mop_files SET filename = 'unknown_file' WHERE filename IS NULL")
    op.execute("UPDATE mop_files SET file_size = 0 WHERE file_size IS NULL")
    op.execute("UPDATE mop_files SET uploaded_by = (SELECT id FROM users LIMIT 1) WHERE uploaded_by IS NULL")
    
    # Now make columns NOT NULL
    with op.batch_alter_table('mop_files', schema=None) as batch_op:
        batch_op.alter_column('filename', nullable=False)
        batch_op.alter_column('file_size', nullable=False)
        batch_op.alter_column('uploaded_by', nullable=False)
        batch_op.create_foreign_key(None, 'users', ['uploaded_by'], ['id'])

    # Add columns to mops with default values for existing records
    with op.batch_alter_table('mops', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('priority', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('estimated_duration', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('risk_level', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('prerequisites', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('rollback_plan', sa.Text(), nullable=True))
    
    # Update existing records with default values
    op.execute("UPDATE mops SET description = 'No description provided' WHERE description IS NULL")
    op.execute("UPDATE mops SET category = 'General' WHERE category IS NULL")
    op.execute("UPDATE mops SET priority = 'Medium' WHERE priority IS NULL")
    op.execute("UPDATE mops SET estimated_duration = 30 WHERE estimated_duration IS NULL")
    op.execute("UPDATE mops SET risk_level = 'Medium' WHERE risk_level IS NULL")
    
    # Now make required columns NOT NULL
    with op.batch_alter_table('mops', schema=None) as batch_op:
        batch_op.alter_column('description', nullable=False)
        batch_op.alter_column('category', nullable=False)
        batch_op.alter_column('priority', nullable=False)
        batch_op.alter_column('estimated_duration', nullable=False)
        batch_op.alter_column('risk_level', nullable=False)

    # Add columns to users with default values for existing records
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('full_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_default_account', sa.Boolean(), nullable=True))
    
    # Update existing records with default values
    op.execute("UPDATE users SET email = username || '@example.com' WHERE email IS NULL")
    op.execute("UPDATE users SET full_name = username WHERE full_name IS NULL")
    op.execute("UPDATE users SET is_active = true WHERE is_active IS NULL")
    op.execute("UPDATE users SET is_default_account = false WHERE is_default_account IS NULL")
    
    # Now make required columns NOT NULL and add unique constraint
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('email', nullable=False)
        batch_op.alter_column('full_name', nullable=False)
        batch_op.alter_column('is_active', nullable=False)
        batch_op.alter_column('is_default_account', nullable=False)
        batch_op.create_unique_constraint(None, ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('is_default_account')
        batch_op.drop_column('is_active')
        batch_op.drop_column('full_name')
        batch_op.drop_column('email')

    with op.batch_alter_table('mops', schema=None) as batch_op:
        batch_op.drop_column('rollback_plan')
        batch_op.drop_column('prerequisites')
        batch_op.drop_column('risk_level')
        batch_op.drop_column('estimated_duration')
        batch_op.drop_column('priority')
        batch_op.drop_column('category')
        batch_op.drop_column('description')

    with op.batch_alter_table('mop_files', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('uploaded_by')
        batch_op.drop_column('file_size')
        batch_op.drop_column('filename')

    # ### end Alembic commands ###
